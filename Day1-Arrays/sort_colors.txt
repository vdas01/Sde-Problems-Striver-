//https://leetcode.com/problems/sort-colors/
class Solution {
public:
    void sortColors(vector<int>& nums) {
       int low = 0 , mid =0,high = nums.size()-1;
        while(mid <= high){
            switch(nums[mid]){
                case 0:
                    swap(nums[mid++],nums[low++]);
                    break;
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(nums[mid],nums[high--]);
                    break;   
            }
            
        }
    }
};

//1) sort
//2)count no of zeroes,ones and two then insert them
//3)Dutch National Flag Algo :-  Time:- O(N) Space:- O(1)
//Consider 3 pointers:- low,mid,high
//low , mid at 0 index and high at last index
//[0...low-1] ---> 0
//[low....high]--->1
//[high+1...n] ---> 2
//if arr[mid] is 0 then -->> swap(arr[low],arr[mid])v--->>mid++, low++
//if arr[mid] is 1 then --->> mid++;
//if arr[mid] is 2 then --->> swap(arr[mid],arr[high]) -->> high--;

